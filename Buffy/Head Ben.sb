 
rightMotor = "B"  'right motor
leftMotor = "C" 'left motor
bothMotors = "BC" 'Im lazy :(

''''''''''''''' i = 0 for nodding'''''' i = 1 for shaking'''''''''''''''
gyro[0] = 3 'Up/down movement
gyro[1] = 4 'Left/right movement
target[0] = 0 'Wanted end degrees up/down from center '''Nodding'''
target[1] = 0 'Wanted end degrees left/right from center '''Shaking'''
current[0] = 0 'Current degrees up/down from center '''Nodding'''
current[1] = 0 'Current degrees left/right from center '''Shaking'''
start[0] = 0
start[1] = 0
startTime = 0
speedLeft = 0 'power delivered to left motor
speedRight = 0 'power delieved to right
headSpeedLR = 50 'base speed ''''CHANGE''''
headSpeedUD = 50 'base speed ''''CHANGE'''
speedRatio = 0
speedMax = 0 
slowFactor = 0
timeRead = 0
startTime = 0
speedLR = 0 'left/right movement
speedUD = 0 'up/down movement 
brakeLR = "True"
brakeUD = "True" 


Sub Initialise
  For i = 0 to 1
    Sensor.SetMode(gyro[i],0)
    start[i] = Sensor.ReadRawValue(gyro[i],0)
  EndFor
  startTime = EV3.Time
EndSub


Sub ReadTime
  timeRead = (EV3.Time - startTime) / 1000
EndSub


Sub GyroReading
  For i = 0 to 1
    current[i] = Sensor.ReadRawValue(gyro[i], 0) - start[i]
  EndFor  
EndSub

Sub HeadMove
  GyroReading()
  slowFactor = 1/20 'change 1/x = x degrees before your target degree ''''CHANGE''''
  If target[0] > (current[0] - 5) Then ''''CHANGE THE 5 TO MORE OR LESS DEAD ZONE'''
    speedUD = Math.Min(1.0, Math.Abs((target[0] - current[0]) * slowFactor)) * headSpeedUD
    brakeLR = "False"
  ElseIf target[0] < (current[0] + 5) Then
    speedUD = -Math.Min(1.0, Math.Abs((target[0] - current[0]) * slowFactor)) * headSpeedUD
    brakeLR = "False"
  Else
    speedUD = 0
  EndIf
  If target[1] > (current[1] - 5) Then
    speedLR = Math.Min(1.0, Math.Abs((target[1] - current[1]) * slowFactor)) * headSpeedLR
    brakeUD = "False"
  ElseIf target[1] < (current[1] + 5) Then
    speedLR = -Math.Min(1.0, Math.Abs((target[1] - current[1]) * slowFactor)) * headSpeedLR
    brakeUD = "False"
  Else
    speedLR = 0
  EndIf
  
  If brakeLR = "True" Then
    speedLR = 0
  EndIf
  If brakeUD = "True" Then
    speedUD = 0
  EndIf
  
  
  
  speedLeft = speedLR + speedUD
  speedRight = speedLR - speedUD
  
  speedMax = Math.Max(Math.Abs(speedLeft), Math.Abs(speedRight))
  If speedMax > 100 then
    speedRatio = 100 / speedMax
  Else
    speedRatio = 1
  EndIf 
  
  
  If speedLeft = 0 Then
    Motor.Stop(leftMotor, "True")
  Else
    Motor.Start(leftMotor * speedRatio, speedLeft)
  EndIf
  If speedRight = 0 Then
    Motor.Stop(rightMotor, "True")
  Else
    Motor.Start(rightMotor * speedRatio, speedRight)
  EndIf
  
EndSub



Sub Moonwalk
  
  If TimeRead < 20 Then
    
    ElseIf 
  
  
EndSub


finished = "False"

Initialise()

While finished = "False" 
  
  
  ReadTime()
  GyroReading()
  
  If timeRead < 4 Then '''CHANGE TIMINGS AND POS TO WHEN AND WHAT U WANT IT'''
    target[0] = 0
    target[1] = 0
   ElseIf timeRead < 8 Then
    target[0] = -45
    target[1] = 0
    ElseIf timeRead < 12 Then
    target[0] = 0
    target[1] = 0
      ElseIf TimeRead < 16 and (moonwalk msg) Then
      
      ElseIf TimeRead < 16 and (piro msg) Then
    
    Moonwalk()
    
    ElseIf timeRead < 300000000 Then
    finished = "True"
  EndIf
  
  HeadMove()
  
  
EndWhile


  